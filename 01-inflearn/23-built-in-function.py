# 파이썬 내장함수 (built in function)
# 파이썬 인터프리터가 이미 가지고 있는 함수

# 반복가능한 객체의 종류: list, tuple, set, dictionary

# 파이썬 내장함수의 종류
# 1) abs(): 숫자형 데이터를 파라미터로 받아 절대값을 리턴하는 함수
# 2) all(): 반복가능한 객체안에 있는 데이터를 검사해 True 또는 False를 리턴하는 함수 (하나라도 False면 False)
# 3) any(): 반복가능한 객체안에 있는 데이터를 검사해 True 또는 False를 리턴하는 함수 (하나라도 True면 True)
# 4) chr(): 아스키코드를 파라미터로 받아 해당하는 문자를 리턴하는 함수
# 5) ord(): 문자를 파라미터로 받아 해당하는 아스키코드를 리턴하는 함수
# 6) enumerate(): 반복가능한 객체안에 있는 데이터의 인덱스와 원소에 접근해 루프를 돌리는 함수
# 7) filter(): 조건에 맞으면 걸러내는 함수
# 8) id(): 데이터의 주소값(=레퍼런스)를 리턴하는 함수
# 9) len(): 데이터의 길이를 반환하는 함수
# 10) max(): 최대값을 반환하는 함수
# 11) min(): 최소값을 반환하는 함수
# 12) map(): 리스트 데이터를 파라미터로 받은 함수로 처리해주는 함수
# 13) pow(): 제곱값을 반환하는 함수
# 14) range(): 특정 구간의 숫자 범위를 만들어주는 함수
# 15) round(): 첫번째 파라미터로 숫자를 받고 두번째 파라미터로 자릿수를 받아 반올림해주는 함수
# 16) sorted(): 반복가능한 객체안에 있는 데이터를 정렬해주는 함수 
# 17) sum(): 반복가능한 객체안에 있는 데이터들의 합을 리턴하는 함수
# 18) type(): 데이터의 자료형을 리턴해주는 함수
# 19) zip(): 첫번째, 두번째 함수에 반복가능한 객체를 받고 같은 인덱스를 가진 데이터끼리 묶어 리턴해주는 함수

# 1. abs(숫자형데이터)
# 숫자형 데이터를 파라미터로 받아 절대값을 리턴하는 함수 
print(abs(-3))
# 3

# 2. all(반복가능한객체)
# 반복가능한 객체안에 있는 데이터를 검사해 True 또는 False를 리턴하는 함수 (하나라도 False면 False)
print(all([0, True, (-1, 2, 3)]))
# False

# 3. any(반복가능한객체)
# 반복가능한 객체안에 있는 데이터를 검사해 True 또는 False를 리턴하는 함수 (하나라도 True면 True)
print(any([0, True, (-1, 2, 3)]))
# True

# 4. chr(아스키코드)
# 아스키코드를 파라미터로 받아 해당하는 문자를 리턴하는 함수
print(chr(67))
# C

# 5. ord(문자)
# 문자를 파라미터로 받아 해당하는 아스키코드를 리턴하는 함수
print(ord('C'))
# 67

# 6. enumerate(반복가능한객체)
# 반복가능한 객체안에 있는 데이터의 인덱스와 원소에 접근해 루프를 돌리는 함수
for i, name in enumerate(['a', 'b', 'c']):
  print(i, name)
# 0 a
# 1 b
# 2 c

# 7. filter(함수, 반복가능한객체)
# 조건에 맞으면 걸러내는 함수
def conv_pos(x):
  return abs(x) > 2

print(filter(conv_pos, [1, -3, 2, 0, -5, 6]))
# <filter object at 0x10a883c40>

print(list(filter(conv_pos, [1, -3, 2, 0, -5, 6])))
# [-3, -5, 6]

# 8. id()
# 데이터의 주소값(=레퍼런스)를 리턴하는 함수
# 아이디값은 출력할때마다 변한다
print(id(5))
# 4337533296
print(id(False))
# 4335265688

# 9. len()
# 데이터의 길이를 반환하는 함수
print(len('abcd'))
# 4
print(len([1, 2, 3, 4, 5, 6, 7]))
# 7

# 10. max()
# 최대값을 반환하는 함수
print(max([1, 2, 3]))
# 3
print(max('python')) # 오름차순 했을때 y가 제일 크기때문에
# y

# 11. min()
# 최소값을 반환하는 함수
print(min([1, 2, 3]))
# 1
print(min('python')) 
# h

# 12. map(함수, 반복가능한객체)
# 반복 가능한 객체안에 있는 데이터를 파라미터로 받은 함수로 처리해주는 함수
def conv_abs(x):
  return abs(x)

print(list(map(conv_abs, [1, -3, 2, 0, -5, 6])))
# [1, 3, 2, 0, 5, 6]

# 13. pow(숫자, 제곱할수)
# 제곱값을 반환하는 함수
print(pow(2, 3))
# 8

# 14. range()
# 특정 구간의 숫자 범위를 만들어주는 함수
# 일반적으로 for문과 함께 많이 쓰인다
# for 변수 in range(start, stop(포함 안됨), step):
#   실행문
print(list(range(1, 10, 2)))
# [1, 3, 5, 7, 9]

# 15. round(숫자, 자릿수)
# 첫번째 파라미터로 숫자를 받고 두번째 파라미터로 자릿수를 받아 반올림해주는 함수
print(round(6.5781, 2))
# 6.58

# 몇째자리인지 설정하지 않으면 첫째자리에서 바로 반올림한다
print(round(5.6243))
# 6

# 16. sorted(반복가능한객체)
# 반복가능한 객체안에 있는 데이터를 정렬해주는 함수
print(sorted([6, 5, 7, 4, 3, 1, 2]))
# [1, 2, 3, 4, 5, 6, 7]
print(sorted('python'))
# ['h', 'n', 'o', 'p', 't', 'y']

# 17. sum()
# 반복가능한 객체안에 있는 데이터들의 합을 리턴하는 함수
print(sum([1, 2, 3, 4, 5 ]))
# 15
print(sum(range(1, 11)))
# 55

# 18. type()
# 데이터의 자료형을 리턴해주는 함수
print(type({}))
# <class 'dict'>
print(type(()))
# <class 'tuple'>
print(type([]))
# <class 'list'>
print(type(True))
# <class 'bool'>
print(type(10))
# <class 'int'>

# 19. zip(반복가능한객체, 반복가능한객체)
# 첫번째, 두번째 함수에 반복가능한 객체를 받고 같은 인덱스를 가진 데이터끼리 묶어 리턴해주는 함수
print(list(zip([10, 20, 30], [40, 50, 60])))
# [(10, 40), (20, 50), (30, 60)]